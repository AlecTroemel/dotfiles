set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:FuraCode Nerd Font 16

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

bindsym $mod+space exec GDK_BACKEND=x11 rofi -show combi -run-shell-command '{terminal} -e \\"{cmd}; read -n 1 -s"'

bindsym $mod+p exec rofi -show drun -run-shell-command '{terminal} -e \\"{cmd}; read -n 1 -s"'
# start a terminal
bindsym $mod+t exec gnome-terminal

# start emacs
bindsym $mod+e exec emacs

# kill focused window
bindsym $mod+q kill

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+x move workspace to output eDP-1
bindsym $mod+c move workspace to output DP-6


# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h splith

# split in vertical orientation
bindsym $mod+v splitv

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+y layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# lock the screen
bindsym $mod+Shift+r exec "swaylock -n"

# exit
bindsym $mod+Shift+e exec "swaymsg exit"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
exec_always ~/.config/waybar/waybar.sh

for_window [class="^.*"] border pixel 0
default_floating_border pixel 0
default_border pixel 0

gaps outer 1
gaps inner 2

output eDP-1 scale 1
output DP-4 scale 1
output DP-4 pos 0 0 res 3440x1440
output DP-5 pos 0 0 res 3440x1440
output DP-6 pos 0 0 res 3440x1440
output eDP-1 pos 520 1440 res 2560x1440

input 1:1:AT_Translated_Set_2_keyboard {
      xkb_options ctrl:swapcaps
}

input 1267:32:Elan_Touchpad {
      natural_scroll enabled
      tap enabled
      dwt enabled
}

# special keyboard inputs
bindsym XF86MonBrightnessUp exec light -A 3
bindsym XF86MonBrightnessDown exec light -U 3

# change volume or toggle mute
bindsym XF86AudioRaiseVolume exec amixer -q -D pulse sset Master 5%+ && pkill -RTMIN+10 waybar
bindsym XF86AudioLowerVolume exec amixer -q -D pulse sset Master 5%- && pkill -RTMIN+10 waybar
bindsym XF86AudioMute exec amixer -q -D pulse sset Master toggle && pkill -RTMIN+10 waybar

# screenshot
bindsym print exec grim -g "$(slurp)" - | wl-copy
bindsym XF86Bluetooth exec blueman-manager

exec ./.config/sway/fader.py

# Idle configuration
exec_always swayidle \
    # timeout 300 'swaymsg "output * dpms off"' \
    # timeout 600 'exec swaylock -n' \
    after-resume 'swaymsg "output * dpms on"' \
    before-sleep 'exec swaylock -n'

exec_always redshift
exec_always mako


# class                 border  bground text    indicator child_border
client.focused          #2B303B #2B303B #DFE1E8 #8FA1B3   #8FA1B3
client.focused_inactive #2B303B #2B303B #DFE1E8 #65737E   #65737E
client.unfocused        #0B161E #0B161E #DFE1E8 #4F5B66   #4F5B66
client.urgent           #BF616A #BF616A #DFE1E8 #BF616A   #BF616A
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C
client.background       #2b303b